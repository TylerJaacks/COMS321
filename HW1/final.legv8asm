// int main(int argc, char* argv[])
Main:
    // int addr = 0;
    ADDI X19, XZR, #0
    // int length = 4
    ADDI X20, XZR, #4

    // a[0] = 2;
    ADDI X9, XZR, #3
    STUR X9, [X19, #0]
    // a[1] = 3;
    ADDI X9, XZR, #3
    STUR X9, [X19, #8]
    // a[2] = 5;
    ADDI X9, XZR, #5
    STUR X9, [X19, #16]
    // a[3] = 1; 
    ADDI X9, XZR, #1
    STUR X9, [X19, #24]

    BL InsertionSort
    B Exit
// addr -> X19, length -> X20
InsertionSort:
    // int i = 0;
    ADDI X23, XZR, #1
    
    // for (i = 1; i < length - 1; i++)
    InsertionSortLoop:
        // int k = lenght - 1;
        SUBI X10, X20, #1
        
        SUBS X11, X23, X10
        B.GT InsertionSortDone

        // TODO InsertSortedPos(addr, i, length-1)
        PRNT X23

        // i++;
        ADDI X23, X23, #1

        B InsertionSortLoop
InsertionSortDone:
    BR LR
InsertSortedPos:
    // v = addr[pos]
    LSL X10, X20, #3
    ADD X10, X19, X20
    LDUR X11, [X10, #0]

    // p = FindSortedPos(addr, v, final)
    // ShiftRight(addr, p, pos)
    // addr(p) = v
Exit:
    DUMP