Main:
    // int *addr = 0x0000;
    ADDI X19, XZR, #0
    // int val = 2;
    ADDI X20, XZR, #2
    // int final = 4;
    ADDI X21, XZR, #4

    // a[0] = 1;
    ADDI X9, XZR, #1
    STUR X9, [X19, #0]
    // a[1] = 2;
    ADDI X9, XZR, #2
    STUR X9, [X19, #8]
    // a[2] = 3;
    ADDI X9, XZR, #3
    STUR X9, [X19, #16]
    // a[3] = 4; 
    ADDI X9, XZR, #4s
    STUR X9, [X19, #24]

    // FindSortedPos(addr, val, final)
    BL FindSortedPos
    B Done

// addr -> X19, val -> X20, and final -> X21, and return -> X22
// FindSortedPos(addr, val, final)
//  for i from 0 to final
//    if addr[i] >= val
//      break
//  return i
FindSortedPos:
    // int i = 0
    ADD X22, XZR, XZR                
FindSortedPosLoop:
    SUBS X9, X22, X21

    // TODO there is an infinite loop here.
    // for i from 0 to final
    B.GE FindSortedPosLoopDone

    // if addr[i] >= val

    // i++;
    ADDI X22, X19, #1
    B FindSortedPosLoop
FindSortedPosLoopDone:
//   LDUR LR, [SP, #0]
//   ADDI SP, SP, #24
    BR LR
Done:
    DUMP