Main:
    // int *addr = 0x00000;
    ADDI X19, XZR, #0
    // int size = 4;
    ADDI X20, XZR, #4
    // int pos = 1;
    ADDI X21, XZR, #1
    // int final = 4;
    ADDI X22, XZR, #4

    // a[0] = 2;
    ADDI X9, XZR, #2
    STUR X9, [X19, #0]
    // a[1] = 3;
    ADDI X9, XZR, #3
    STUR X9, [X19, #8]
    // a[2] = 1;
    ADDI X9, XZR, #1
    STUR X9, [X19, #16]
    // a[3] = 5; 
    ADDI X9, XZR, #5
    STUR X9, [X19, #24]

    // ShiftRight(addr, pos, final)
    B ShiftRight
// X19 -> Array Starting Address.
// X20 -> Size of Array.
// X21 -> Position of the Item.
// X22 -> Final Position.
//
// ShiftRight(addr, pos, final):
//  for i from final - 1 to pos:
//    addr[i + 1] = addr[i]
ShiftRight:
    // int i = final - 1;
    SUBI X23, X22, #1

    // for (i; i > pos; i--)
    ShiftRightLoop:
        SUBS XZR, X21, X23
        B.GT Done
        
        // (i * 8)
        LSL X10, X23, #3
        // (addr * 8)
        LSL X11, X19, #3
        // (addr * 8) + (i * 8)
        ADD X11, X11, X10

        // int tmp = addr[i];
        LDUR X12, [X11, #0]

        // i + 1
        ADDI X13, X23, #1
        // [(i + 1) * 8]
        LSL X13, X13, #3
        // (addr * 8)
        LSL X11, X19, #3
        // [(i + 1) * 8] + (addr * 8)
        ADD X15, X13, X11

        LDUR X16, [X15, #0]
        PRNT X16

        // addr[i + 1] = tmp;
        STUR X12, [X15, #0]

        LDUR X16, [X15, #0]
        PRNT X16

        // i--;
        SUBI X23, X23, #1

        B ShiftRightLoop
Done:
  DUMP